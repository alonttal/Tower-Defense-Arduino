<?xml version="1.0" encoding="UTF-8"?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="TowerDefense.StatusView"
             xmlns:Converters="clr-namespace:TowerDefense.Converters"
             xmlns:controls="clr-namespace:TowerDefense">
    <Frame x:Name="ExpandablePanel" HasShadow="True" Padding="0">
        <StackLayout Orientation="Vertical" Spacing="0">
            <StackLayout Orientation="Vertical" VerticalOptions="StartAndExpand" Spacing="0" Padding="0, 3">
                <StackLayout.GestureRecognizers>
                    <TapGestureRecognizer Tapped="MovePanel_Tapped"/>
                </StackLayout.GestureRecognizers>
                <Image HorizontalOptions="CenterAndExpand" VerticalOptions="StartAndExpand">
                    <Image.Triggers>
                        <DataTrigger TargetType="Image" Binding="{Binding IsExpanded}" Value="true">
                            <Setter Property="Source" Value="down_icon.png" />
                        </DataTrigger>
                        <DataTrigger TargetType="Image" Binding="{Binding IsExpanded}" Value="false">
                            <Setter Property="Source" Value="up_icon.png" />
                        </DataTrigger>
                    </Image.Triggers>
                </Image>
                <StackLayout Orientation="Horizontal" Padding="25, 0">
                    <StackLayout Orientation="Horizontal" HorizontalOptions="Start" VerticalOptions="Center" Spacing="1">
                        <Image Source="bluetooth.png" IsVisible="{Binding Bluetooth.IsBTConnected}" Margin="12, 0, 12, 0"/>
                        <ActivityIndicator HeightRequest="5" Color="Gray" IsVisible="{Binding Bluetooth.IsBTConnected, Converter={Converters:InverseBoolConverter}}" IsRunning="{Binding Bluetooth.IsBTConnected, Converter={Converters:InverseBoolConverter}}" />
                        <Label>
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding Bluetooth.IsBTConnected}" Value="true">
                                    <Setter Property="Text" Value="Bluetooth connected" />
                                </DataTrigger>
                                <DataTrigger TargetType="Label" Binding="{Binding Bluetooth.IsBTConnected}" Value="false">
                                    <Setter Property="Text" Value="Connecting bluetooth" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal" HorizontalOptions="EndAndExpand" VerticalOptions="CenterAndExpand" Spacing="1">
                        <Button Image="settings.png" HorizontalOptions="End" BackgroundColor="Transparent" WidthRequest="50" Padding="0" Margin="0" Clicked="OnSettings_Clicked"/>
                    </StackLayout>
                </StackLayout>
            </StackLayout>
            <BoxView HeightRequest="1" WidthRequest="1" BackgroundColor="WhiteSmoke"/>
            <StackLayout x:Name="ExpandedLayout" Orientation="Vertical" VerticalOptions="CenterAndExpand" Padding="25, 25, 25, 10">
                <Button Text="START GAME" BackgroundColor="LightSeaGreen" TextColor="White" Clicked="GameStart_Clicked" IsEnabled="{Binding Bluetooth.IsBTConnected}" IsVisible="{Binding GameStats.IsGameStarted, Converter={Converters:InverseBoolConverter}}" />
                <Button Text="END GAME" BackgroundColor="IndianRed" TextColor="White" Clicked="GameEnd_Clicked" IsVisible="{Binding GameStats.IsGameStarted}" />
                <controls:HighScoresView x:Name ="HighScores" Margin="0, 15"/>
            </StackLayout>
        </StackLayout>
    </Frame>
</ContentView>